# ExESS -- CHANGELOG

## v0.1.11 (2024/??/??)

- BUGFIX: `landing_position` and `time_of_flight` functions in `trajectory.jl` now handle
  special velocity cases (vertical, horizontal, zero, and negative) correctly and not return
  `NaN` values anymore
- HOUSEKEEPING: lunar surface temperature functions
  - unified format, docstrings, and typesetting
  - fixed `lunar_surface_temperatures_DIVINER_avg` to correctly access the data
- HOUSEKEEPING & BUGFIX: renamed `coordinates` to `vectors` in tests and fixed the cartesian
  rotation functions, which previously rotated in the wrong direction
    - added tests for the cartesian rotation functions


## v0.1.10 (2024/08/26)

- BUGFIX of `coord2idx` for `Spherical2DGrid_EqSim` and `Spherical2DGrid_Reduced_Eqsim`, 
  which now correctly mirrors the latitude values onto the northern hemisphere and does not
  clip it to the equator anymore
- BUGFIX of `coord2idx` to also correctly handle boundary cases close to `pi` and `-pi`
- renamed `coordinates/` to `vectors/` to clarify the notation
  - also renamed `AbstractCoordinate` to `AbstractEVector`, which is short for "abtract
    ExESS vector" and should not be confused with the `AbstractVector` type
- removed the `GlobalSphericalVelocity` type as it was never used and wrongly defined, based
  on the new vector/coordinate definitions and notations
- added new velocity type `LocalSphericalVelocity`
  - edited `maxwellian`s to use the new velocity type in sampler function
- removed the local cartesian 3d grid type (reverted into the private repo)
- added `Statistics.mean` extension for Maxwellian elevation distributions
- changed `MBVelocityDistribution` to be strictly positive in upwards (z) direction
- added partial grid functionality to `Spherical2DGrid` types through additional
  keywords `longrange` and `latrange`
- renamed `theta` and `phi` to `lon` and `lat` in grids for consistency and differentiation
  from spherical vectors

## v0.1.9 (2024/07/05)

- added `pclamp` utility function
  + periodic clamp function that limits the input to a given range, where the overflow is
    wrapped around to the other side of the range
  + important for periodic values like longitude/azimuth angles
- adjusted `coord2idx` functions for grids
  + using the new `pclamp` function to correctly handle overvflowing coordinates
  + added output type `Int64` to the function signature
- added `mapgrid` function that maps values defined on one grid to another
- updated grid tests (among others: tested `mapgrid` function)
- added more icons/logos for subsystems, to be used in the GitHub Wiki
  - `res/exess-constants-icon` for custom defined constants
  - `res/exess-drivers-icon` for drivers of exospheres
  - `res/exess-grids-icon` for custom grids
  
 
## v0.1.8b (2024/06/26)

- edited and added more constants to `moon/constants.jl`
- added more icons/logos for subsystems, to be used in the GitHub Wiki
  - `res/exess-coords-icon` for custom coordinates
- housekeeping of scripts and tests

## v0.1.8 (2024/06/07)

- added `physical_chemistry.jl` script to `/drivers`
  - includes `arrhenius` and `diffusion_time` functions
- fixed: `mode` included in exported methods
- added `CERES_DAY` and `MERCURY_DAY` constants
- added more and edited existing tests
- _(internal)_ added utility function to handle `erfinv` calls with `Float16` types
- fixed depreciations inside of the `trajectory` calculation
- several housekeeping changes and bugfixes

## v0.1.7 (2024/04/16)

- updated `base\constants.jl` to include the latest values for the physical constants
  CODATA 2018 database
- added docstrings to `base\constants.jl` with the appropriate mention of the **sources**
- added kilo joule per mole to electronvolt conversion to `base\utils.jl`
  + `kJpmol2eV` and `eV2kJpmol` functions


## v0.1.6 (2024/04/04)

- fixed Chamberlain projection (wrong order of radius arguments)
- updated Chamberlain projection function call (breaking)
  + the call does no longer include the known density `n1`
  + central body mass `M` moven from `kwargs` to `args`
  + type stability
  + behaviour tests and comparison to literature


## v0.1.5 (2024/03/25)

- added type stability tests for trajectory calculations
- fixed trajectory benchmarking
- added behaviour tests for trajectories
- edit Chamberlain projection to include selectable partitions
- general housekeeping

## v0.1.3 (2024/02/28)

- added support for vectorized `Base.rand` calls of custom distributions
- edited multivariate maxwellians to be more efficient (fewer allocations) when using
  type casts in vectorized calls
- minor formatting updates